# -*- coding: utf-8 -*-
"""Project1(Titanic- Pranav Uikey).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LnM3z_jUum-urf7z4uF0fHqrtl16v37q
"""

#Project (Titanic Survivors DataAnalysis) By Pranav Uikey.

import pandas as pd
import numpy as np
df = pd.DataFrame(pd.read_csv("train.csv"))         #read .csv file
df.head()

df.shape                                          #the shape of the DataFrame(Row, Coloumn)

df.isnull()                                       #Null values in the DataFrame

df.isnull().sum()                                 #Total number of null values in columns

#Only the coloumn with more that 35% data missing should be stored in the DataFrame

drop_col = df.isnull().sum() [df.isnull().sum( )>(35/100 * df.shape [0])]     #shows coloumn which has more than 35% data missing 
drop_col

drop_col.index                                      #Index of the coloumn to be dropped

df.drop (drop_col. index, axis=1, inplace=True)      #Dropping the colomn
df.isnull().sum()

df["Embarked"].describe()                            #Describing the coloumn with string values

df ["Embarked"].fillna("S", inplace=True)             #Replace the null values with the most frequent value
df.isnull().sum()

df.corr()                                              #Checking corelation between rows and columns

#To optimize the DataFrame, we combine "SibSp" and "Parch" to make a new coloumn "Family"
df["Family"] = df["SibSp"] + df["Parch"]
df.drop(["SibSp", "Parch"], axis=1, inplace= True)      #Dropping the two coloumns
df.corr()                                                #New correlation

#Family doesn't have much correlation with survival rate
#Check whether passenger with family or Alone affects the survival rate of an individual

df ['Alone'] = [0 if df ['Family'][i]>0 else 1 for i in df.index]          #Check whether the passenger was alone or not
df.head()

#Grouping both the coloumns
df.groupby(['Alone']) ['Survived'].mean()         #mean value of both coloumns

#Correlation between Passenger is aloen and Ticket Fare
df[['Alone','Fare']].corr()

#Check whether Sex of the passengers affects their Survival Rate
df ['Sex'] = [0 if df['Sex'][i]=='male' else 1 for i in df.index]   #1 for female, 0 for male
df.groupby(['Sex'])['Survived'].mean()

#Check whether the place of embarkment affects the Survuval Rate
df.groupby(['Embarked'])['Survived'].mean()           #the mean value of both columns